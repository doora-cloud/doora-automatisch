version: "3.9"

services:
  app:
    image: activepieces/activepieces:latest
    restart: always
    privileged: true
    environment:
      AP_ENVIRONMENT: prod
      AP_FRONTEND_URL: ${APP_URL}
      AP_WEBHOOK_TIMEOUT_SECONDS: 30
      AP_TRIGGER_DEFAULT_POLL_INTERVAL: 5
      AP_POSTGRES_HOST: db
      AP_POSTGRES_PORT: 5432
      AP_POSTGRES_DATABASE: ${DB_NAME}
      AP_POSTGRES_USERNAME: ${DB_USER}
      AP_POSTGRES_PASSWORD: ${DB_PASSWORD}
      AP_REDIS_HOST: redis
      AP_REDIS_PORT: 6379
      AP_REDIS_PASSWORD: ${REDIS_PASSWORD}
      AP_EXECUTION_MODE: SANDBOXED
      AP_SANDBOX_RUN_TIME_SECONDS: 600
      AP_FLOW_WORKER_CONCURRENCY: ${WORKER_CONCURRENCY}
      AP_JWT_SECRET: ${JWT_SECRET}
      AP_QUEUE_MODE: REDIS
      AP_OPENAI_API_KEY: ${OPENAI_API_KEY}
      AP_SIGN_UP_ENABLED: ${SIGN_UP_ENABLED}
    expose:
      - 80
    volumes:
      - ${BASE_VOLUME}/activepieces:/root/.activepieces
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - internal
      - nginx
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_APP_CPU:-1}
          memory: ${LIMIT_APP_RAM:-512M}
        reservations:
          cpus: '0.1'
          memory: 128M
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    expose:
      - 5432
    volumes:
      - ${BASE_VOLUME}/postgresql:/var/lib/postgresql/data
    networks:
      - internal
      - database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_DB_CPU:-1}
          memory: ${LIMIT_DB_RAM:-256M}
        reservations:
          cpus: '0.1'
          memory: 16M
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${BASE_VOLUME}/redis:/data
    expose:
      - 6379
    networks:
      - internal
      - database
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      retries: 3
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_REDIS_CPU:-1}
          memory: ${LIMIT_REDIS_RAM:-512M}
        reservations:
          cpus: '0.1'
          memory: 16M
  db-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    restart: always
    environment:
      DATA_SOURCE_NAME: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable
    expose:
      - 9187
    networks:
      - internal
      - monitoring
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_CPU_DB_EXPORTER:-0.2}
          memory: ${LIMIT_RAM_DB_EXPORTER:-128M}
        reservations:
          cpus: '0.1'
          memory: 10M


networks:
  internal:
  nginx:
    external: true
  database:
    external: true
  monitoring:
    external: true
